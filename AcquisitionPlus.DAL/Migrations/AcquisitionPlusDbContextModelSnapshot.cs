// <auto-generated />
using System;
using AcquisitionPlus.DAL.SQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AcquisitionPlus.DAL.Migrations
{
    [DbContext(typeof(AcquisitionPlusDbContext))]
    partial class AcquisitionPlusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("IdDepartment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartment");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.EmployeePurchaseOrder", b =>
                {
                    b.Property<Guid?>("IdEmployee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPurchaseOrder")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdEmployee", "IdPurchaseOrder");

                    b.HasIndex("IdPurchaseOrder");

                    b.ToTable("EmployeePurchaseOrders");
                });

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("IdPurchaseOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSupplier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUnitOfMeasurement")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPurchaseOrder");

                    b.HasIndex("IdSupplier");

                    b.HasIndex("IdUnitOfMeasurement");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.PurchaseOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("NoOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Identification_Rnc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.UnitOfMeasurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnitOfMeasurements");
                });

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.Employee", b =>
                {
                    b.HasOne("AcquisitionPlus.Entities.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("IdDepartment");
                });

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.EmployeePurchaseOrder", b =>
                {
                    b.HasOne("AcquisitionPlus.Entities.Entities.Employee", "Employee")
                        .WithMany("employeePurchaseOrders")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcquisitionPlus.Entities.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("employeePurchaseOrders")
                        .HasForeignKey("IdPurchaseOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AcquisitionPlus.Entities.Entities.Product", b =>
                {
                    b.HasOne("AcquisitionPlus.Entities.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Products")
                        .HasForeignKey("IdPurchaseOrder");

                    b.HasOne("AcquisitionPlus.Entities.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("IdSupplier");

                    b.HasOne("AcquisitionPlus.Entities.Entities.UnitOfMeasurement", "UnitOfMeasurement")
                        .WithMany("Products")
                        .HasForeignKey("IdUnitOfMeasurement");
                });
#pragma warning restore 612, 618
        }
    }
}
